<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 使用namespace标签   自动生成了 一个实现类来执行sql语句 
		实现类的方法名与查询的id值一致
-->
<mapper namespace="com.lgd.model.CourseMapper">
	<!-- 配置javaBena  与数据库的映射 -->
	<resultMap id="BaseResultMap" type="com.lgd.bean.Course">
		<id column="fid" property="fid" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="fnumber" property="fnumber" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="DOUBLE" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="createdate" property="createdate" jdbcType="DATE" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="coursename" property="coursename" jdbcType="VARCHAR" />
		<result column="courseDescription" property="courseDescription" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_list">
		fid, name, weight, description
	</sql>
	
	<!-- 根据fid  查询cmpt_dtal表 -->
	
	
	
	<insert id="addCourse"  parameterType="com.lgd.bean.Course" >
		<trim  prefix="insert  Course(" suffix=")" suffixOverrides="," >
			<if test="name">  name, </if>
			<if test="fnumber">  fnumber, </if>
			<if test="weight">  weight, </if>
			<if test="creator">  creator, </if>
			<if test="createdate">  createdate, </if>
			<if test="description">  description, </if>
			<if test="coursename">  coursename, </if>
			<if test="courseDescription">  courseDescription, </if>
		</trim>
		<trim  prefix="values(" suffix=")" suffixOverrides="," >
			<if test="name">  #{name}, </if>
			<if test="fnumber">  #{fnumber}, </if>
			<if test="weight">  #{weight}, </if>
			<if test="creator">  #{creator}, </if>
			<if test="createdate">  #{createdate}, </if>
			<if test="description">  #{description}, </if>
			<if test="coursename">  #{coursename}, </if>
			<if test="courseDescription">  #{courseDescription}, </if>
		</trim>
	</insert>
	
	<insert id="addListCourse"  parameterType="java.util.List" >
		insert   Course(   name, fnumber, weight, creator, createdate, description,  coursename, courseDescription )   values
		<foreach collection="list"  item="item"  index="index" separator=","  >
			 	(#{item.name},
			 	#{item.fnumber},
				#{item.weight}, 
				#{item.creator}, 
				#{item.createdate}, 
			 	#{item.description},
			 	#{item.coursename}, 
			 	#{item.courseDescription})
		</foreach>
	</insert>
	
	<select id="findCourseByCreator" parameterType="java.util.Map"  resultType="java.util.Map">
		select distinct coursename,  fnumber from course where creator=#{creator} order by createdate desc; 
	</select>
	
</mapper>